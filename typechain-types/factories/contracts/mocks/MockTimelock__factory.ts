/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  MockTimelock,
  MockTimelockInterface,
} from "../../../contracts/mocks/MockTimelock";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_senatePositions",
        type: "address",
      },
      {
        internalType: "address",
        name: "_senate",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_censor",
        type: "address",
      },
    ],
    name: "mintCensor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_consul",
        type: "address",
      },
    ],
    name: "mintConsul",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_dictator",
        type: "address",
      },
    ],
    name: "mintDictator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_senator",
        type: "address",
      },
    ],
    name: "mintSenator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tribune",
        type: "address",
      },
    ],
    name: "mintTribune",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_updatedConsulTermLength",
        type: "uint256",
      },
    ],
    name: "updateConsulTermLength",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum ISenatePositions.Position",
        name: "_position",
        type: "uint8",
      },
      {
        internalType: "string",
        name: "_updatedMetadata",
        type: "string",
      },
    ],
    name: "updateMetadata",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_updatedSenateAddress",
        type: "address",
      },
    ],
    name: "updateSenateAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_updatedSenateContract",
        type: "address",
      },
    ],
    name: "updateSenateContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516105e63803806105e683398101604081905261002f9161007c565b600080546001600160a01b039384166001600160a01b031991821617909155600180549290931691161790556100af565b80516001600160a01b038116811461007757600080fd5b919050565b6000806040838503121561008f57600080fd5b61009883610060565b91506100a660208401610060565b90509250929050565b610528806100be6000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c8063a8e40f7f11610066578063a8e40f7f14610104578063afb533e614610117578063d44b09a21461012a578063e8f209061461013d578063ea0f29ce146100a357600080fd5b80630e7bb28c146100a35780631c6ecca4146100b857806342966c68146100cb57806376ecf90a146100de578063a727f945146100f1575b600080fd5b6100b66100b1366004610380565b610150565b005b6100b66100c63660046103b0565b6101b3565b6100b66100d93660046103b0565b6101e6565b6100b66100ec366004610380565b610217565b6100b66100ff366004610380565b61024a565b6100b66101123660046103c9565b61027d565b6100b6610125366004610380565b6102e8565b6100b6610138366004610380565b61031a565b6100b661014b366004610380565b61034d565b60005460405163750794e760e11b81526001600160a01b0383811660048301529091169063ea0f29ce906024015b600060405180830381600087803b15801561019857600080fd5b505af11580156101ac573d6000803e3d6000fd5b5050505050565b600054604051632e16b6a760e21b81526001600160a01b039091169063b85ada9c9061017e906001908590600401610474565b600054604051630852cd8d60e31b8152600481018390526001600160a01b03909116906342966c689060240161017e565b600054604051631efdd7db60e21b81526001600160a01b0390911690637bf75f6c9061017e90600190859060040161048f565b600054604051631efdd7db60e21b81526001600160a01b0390911690637bf75f6c9061017e90600390859060040161048f565b60005460405163a8e40f7f60e01b81526001600160a01b039091169063a8e40f7f906102b1908690869086906004016104b5565b600060405180830381600087803b1580156102cb57600080fd5b505af11580156102df573d6000803e3d6000fd5b50505050505050565b600054604051631efdd7db60e21b81526001600160a01b0390911690637bf75f6c9061017e906004908590820161048f565b600054604051631efdd7db60e21b81526001600160a01b0390911690637bf75f6c9061017e90600290859060040161048f565b600054604051631efdd7db60e21b81526001600160a01b0390911690637bf75f6c9061017e90600590859060040161048f565b60006020828403121561039257600080fd5b81356001600160a01b03811681146103a957600080fd5b9392505050565b6000602082840312156103c257600080fd5b5035919050565b6000806000604084860312156103de57600080fd5b8335600681106103ed57600080fd5b9250602084013567ffffffffffffffff8082111561040a57600080fd5b818601915086601f83011261041e57600080fd5b81358181111561042d57600080fd5b87602082850101111561043f57600080fd5b6020830194508093505050509250925092565b6006811061047057634e487b7160e01b600052602160045260246000fd5b9052565b604081016104828285610452565b8260208301529392505050565b6040810161049d8285610452565b6001600160a01b039290921660209190910152919050565b6104bf8185610452565b60406020820152816040820152818360608301376000818301606090810191909152601f909201601f191601019291505056fea2646970667358221220b7fcdb5ebc0f3a6d41e1439ad3006a1cdd74ab7bbb0dcb85e9302fb3c9a39b8264736f6c63430008120033";

type MockTimelockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockTimelockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockTimelock__factory extends ContractFactory {
  constructor(...args: MockTimelockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _senatePositions: PromiseOrValue<string>,
    _senate: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MockTimelock> {
    return super.deploy(
      _senatePositions,
      _senate,
      overrides || {}
    ) as Promise<MockTimelock>;
  }
  override getDeployTransaction(
    _senatePositions: PromiseOrValue<string>,
    _senate: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _senatePositions,
      _senate,
      overrides || {}
    );
  }
  override attach(address: string): MockTimelock {
    return super.attach(address) as MockTimelock;
  }
  override connect(signer: Signer): MockTimelock__factory {
    return super.connect(signer) as MockTimelock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockTimelockInterface {
    return new utils.Interface(_abi) as MockTimelockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockTimelock {
    return new Contract(address, _abi, signerOrProvider) as MockTimelock;
  }
}
